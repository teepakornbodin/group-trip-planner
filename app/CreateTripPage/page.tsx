"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { createClientComponentClient } from "@supabase/auth-helpers-nextjs";
import Swal from "sweetalert2";

const CreateTripPage = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [username, setUsername] = useState("");
  const [tripTitle, setTripTitle] = useState("");
  const router = useRouter();
  const supabase = createClientComponentClient();

  useEffect(() => {
    const checkAuth = async () => {
      try {
        const { data: { session } } = await supabase.auth.getSession();

        if (!session?.user) {
          Swal.fire({
            icon: "warning",
            title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö",
            confirmButtonColor: "#8b5cf6"
          }).then(() => router.push("/LoginPage"));
          return;
        }

        // ‡∏î‡∏∂‡∏á profile
        const { data: profile } = await supabase
          .from("profiles")
          .select("username")
          .eq("id", session.user.id)
          .single();

        setUsername(profile?.username || session.user.email || "");
      } catch (error) {
        console.error("Auth check error:", error);
        Swal.fire({
          icon: "error",
          title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
          text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ"
        });
      } finally {
        setIsLoading(false);
      }
    };

    checkAuth();
  }, [router, supabase]);

  const handleCreateTrip = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!tripTitle.trim()) {
      return Swal.fire({ icon: "warning", title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏£‡∏¥‡∏õ" });
    }

    setIsLoading(true);

    try {
      const { data: { session } } = await supabase.auth.getSession();
      if (!session?.user) throw new Error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á profile ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
      await supabase.from("profiles").upsert({
        id: session.user.id,
        username: username || session.user.email
      });

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á trip code ‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
      const tripCode = Math.random().toString(36).substring(2, 8).toUpperCase();

      // Insert trip ‡∏û‡∏£‡πâ‡∏≠‡∏° creator_id
      const { error } = await supabase
        .from("trips")
        .insert([{
          trip_code: tripCode,
          title: tripTitle,
          status: "planning",
          max_participants: 10,
          creator_id: session.user.id,
          ai_processing_complete: false,
          voting_complete: false,
          plan_generated: false
        }])
        .select()
        .single();

      if (error) throw error;

      Swal.fire({
        icon: "success",
        title: "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏£‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üéâ",
        html: `‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏£‡∏¥‡∏õ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠: <strong>${tripCode}</strong><br>‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ä‡∏£‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÜ`,
        confirmButtonColor: "#8b5cf6"
      }).then(() => router.push(`/TripFormPage/${tripCode}`));

    } catch (error: any) {
      console.error("Create trip error:", error);
      Swal.fire({
        icon: "error",
        title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        text: error.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏£‡∏¥‡∏õ‡πÑ‡∏î‡πâ"
      });
    } finally {
      setIsLoading(false);
    }
  };

  if (isLoading) {
    return (
      <div className="flex justify-center items-center h-screen bg-gradient-to-br from-purple-50 to-purple-100">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-purple-600 mx-auto mb-4"></div>
          <p className="text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="flex justify-center items-center min-h-screen bg-gradient-to-br from-purple-50 to-purple-100 p-4">
      <main className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8">
        <div className="mb-6">
          <h1 className="text-3xl font-bold text-center text-purple-600 mb-2">
            ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏£‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà
          </h1>
          <p className="text-center text-gray-600">
            ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, <span className="font-semibold text-purple-600">{username}</span>
          </p>
        </div>

        <form onSubmit={handleCreateTrip} className="space-y-6">
          <div>
            <label htmlFor="tripTitle" className="block text-gray-700 mb-2 font-medium">
              ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏£‡∏¥‡∏õ
            </label>
            <input
              type="text"
              id="tripTitle"
              value={tripTitle}
              onChange={(e) => setTripTitle(e.target.value)}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ó‡∏£‡∏¥‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà‡∏õ‡∏µ‡πÉ‡∏´‡∏°‡πà"
              required
              className="w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent text-gray-700 placeholder-gray-400"
            />
          </div>

          <button
            type="submit"
            className="w-full bg-purple-500 hover:bg-purple-600 text-white py-3 rounded-lg font-semibold transition-colors shadow-md hover:shadow-lg"
          >
            ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏£‡∏¥‡∏õ
          </button>

          <button
            type="button"
            onClick={() => router.push("/")}
            className="w-full bg-gray-200 hover:bg-gray-300 text-gray-700 py-3 rounded-lg font-semibold transition-colors"
          >
            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
          </button>
        </form>
      </main>
    </div>
  );
};

export default CreateTripPage;
